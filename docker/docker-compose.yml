version: '3.4'
services:

  nginx:
    image: 'nginx:stable-alpine'
    ports: 
      - 80:80
      - 443:443
    tty: true
    depends_on: 
      - front
      - apiauth
      - redis
      - pg
      - pgadmin
      - portainer
    volumes: 
      # remember!!!!!!! add trust proxy to nodejs services
      - ../app/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro #read only 

  portainer:
    image: portainer/portainer-ce
    restart: always
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock 

  redis:
    image: "redis:6.2.2-alpine"
    restart: always
    volumes:
      - redisvol:/var/lib/redis

  pg:
    image: 'postgres:13.2-alpine'
    volumes: 
      - pgvol:/var/lib/postgresql/data 
      - ../app/services/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: 'dpage/pgadmin4'
    restart: always
    depends_on:
      - pg

  apiauth:
    build: 
      context: ../app/services/auth
    restart: always
    depends_on:
      - pg
      - redis

  front: 
    build:
      context: ../app/web
    restart: always
    depends_on: 
      - apiauth
    volumes: 
      - /app/node_modules
      - ../web:/app
    environment: 
      - NEXT_PUBLIC_ROUTE=http://apiauth:5002
    ports: 
      - 3000:3000


volumes: 
  pgvol:
    driver: local
  portainer_data:
    driver: local
  redisvol:
    driver: local

# version: '3.4'
# services:

#   #
#   pg:
#     image: 'postgres:13.2-alpine'
#     stdin_open: true
#     restart: always
#     volumes: 
#       - pgvol:/var/lib/postgresql/data 
#       - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
#     environment:
#       # - POSTGRES_HOST_AUTH_METHOD=trust
#       - POSTGRES_USER=root
#       - POSTGRES_PASSWORD=secret
#       - PGPORT=5432
#     ports: 
#       - 5432:5432

#   #
#   pgadmin:
#     image: 'dpage/pgadmin4'
#     stdin_open: true
#     restart: always
#     depends_on:
#       - pg
#     environment: 
#       - PGADMIN_DEFAULT_EMAIL=nazemi.works@gmail.com
#       - PGADMIN_DEFAULT_PASSWORD=secret
#     ports: 
#       - 8005:80


#   #
#   apiauth:
#     build: 
#       context: ../server
#       dockerfile: Dockerfile.dev
#     restart: always
#     stdin_open: true
#     depends_on:
#       - pg
#     volumes: 
#       - /app/node_modules 
#       - ../server:/app
#     environment:
#       - PORT=5002
#       - DBURL=pg
#       - DBNAME=devrefvanillanodesql
#       - NODE_ENV=development
#       - PGPASS=secret
#       - PGUSER=root
#       - CORS=http://localhost:3000
#       - JWT_KEY=yhgewy5ehuyrhbe56y
#       - JWT_TTL=365d
#     ports: 
#       - 5002:5002

#   front: 
#     build:
#       context: ../web
#       dockerfile: Dockerfile.dev
#     restart: always
#     stdin_open: true
#     depends_on: 
#       - apiauth
#     volumes: 
#       - /app/node_modules
#       - ../web:/app
#     environment: 
#       - NEXT_PUBLIC_ROUTE=http://apiauth:5002
#     ports: 
#       - 3000:3000


# volumes: 
#   pgvol:
#     driver: local